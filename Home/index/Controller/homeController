<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
						http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">
	<import resource="loggerroutercontext.xml" />
	<import resource="ErrorRetryHandlerRouteContext.xml" />
	<import resource="HeaderValidationRouteContext.xml" />
	<camelContext id="CreditVidyaFrontEnd" xmlns="http://camel.apache.org/schema/spring">
		<routeContextRef ref="CommonLogRoutes" />
		<routeContextRef ref="GenericErrorAndRetryHandler" />
		<routeContextRef ref="HeaderValidationRoutes" />
		<dataFormats>
			<jacksonXml id="jack" />
		</dataFormats>
		<restConfiguration component="jetty" port="{{jetty.port}}" inlineRoutes="true">
			<apiProperty key="cors" value="true" />
		</restConfiguration>
		<rest path="/rest/creditVidyafrontend/v1.0">
			<get path="/healthCheck">
				<responseMessage message="Its Up and Running" />
				<to uri="mock:update" />
			</get>
			<get path="/healthCheckReadiness">
				<responseMessage message="Its Up and Running" />
				<to uri="mock:update" />
			</get>
			<get path="/healthCheckLiveness">
				<responseMessage message="Its Up and Running" />
				<to uri="mock:update" />
			</get>
			<post consumes="application/json" path="/emailValidation">
				<to uri="direct:emailValidation-route" />
			</post>

		</rest>

		<!-- Credit Vidya Email Validation -->
		<route id="CVEmailValidationRoute" streamCache="true">
			<from id="EmailValidationEndpoint" uri="direct:emailValidation-route" />
			<setProperty id="_processName6" name="processName">
				<simple>emailValidation</simple>
			</setProperty>
			<setProperty id="_serviceName3" name="serviceName">
				<simple>SOFTCELL_FE_ADAPTER</simple>
			</setProperty>
			<setProperty id="_transactionId6" name="transactionId">
				<simple>${exchangeId}</simple>
			</setProperty>
			<setProperty id="_conversationId3" name="conversationId">
				<simple>${header.ConversationID}</simple>
			</setProperty>
			<setProperty id="_authorization3" name="authorization">
				<simple>${header.Authorization}</simple>
			</setProperty>
			<setProperty id="_sourceName3" name="sourceName">
				<simple>${header.SourceName}</simple>
			</setProperty>
			<setProperty id="_targetSystem22" name="targetSystem">
				<simple>CREDITVIDYA_BE_ADAPTER</simple>
			</setProperty>
			<setHeader name="messageType" id="_sourceRequest3">
				<simple>SourceRequest</simple>
			</setHeader>
			<setHeader name="processName" id="_processName7">
				<simple>${exchangeProperty.processName}</simple>
			</setHeader>
			<setProperty id="EmailValidation_operationNameSetTimestamp8001" name="CurrentTimestamp">
				<simple>${date-with-timezone:now:IST:dd-MMM-yyyy HH:mm:ss.SSS}</simple>
			</setProperty>
			<wireTap id="logSourceRequest4" uri="seda:loggerprocess" />
			<setHeader name="transactionId" id="_transactionId7">
				<simple>${exchangeProperty.transactionId}</simple>
			</setHeader>
			<to id="validateheader5" uri="direct:processHeader" />
			<choice id="headerProcessing5">
				<when id="Missingheader5">
					<simple>${header.MissingHeader} == 'MissingHeader'</simple>
					<setHeader name="messageType" id="_MissingHeader5">
						<simple>SourceResponse</simple>
					</setHeader>
					<setProperty id="_targetSystem23" name="targetSystem">
						<simple>${in.header.SourceName}</simple>
					</setProperty>
					<setHeader name="CamelHttpResponseCode" id="_CamelHttpResponseCode4">
						<simple>400</simple>
					</setHeader>
					<setHeader name="responseStatus" id="failure4">
						<simple>Failure</simple>
					</setHeader>
					<setProperty id="EmailValidation_operationNameSetTimestamp8002" name="CurrentTimestamp">
						<simple>${date-with-timezone:now:IST:dd-MMM-yyyy HH:mm:ss.SSS}</simple>
					</setProperty>
					<wireTap id="logMissingHeaderResp4" uri="seda:loggerprocess" />
				</when>
				<otherwise id="SuccessPath3">
					<convertBodyTo id="_convertBodyTo21" type="java.lang.String" />
					<setHeader name="messageType" id="_targetRequest3">
						<simple>BERequest</simple>
					</setHeader>
					<convertBodyTo charset="utf-8" id="convertByteStream5" type="java.lang.byte[]" />
					<setProperty id="EmailValidation_operationNameSetTimestamp8003" name="CurrentTimestamp">
						<simple>${date-with-timezone:now:IST:dd-MMM-yyyy HH:mm:ss.SSS}</simple>
					</setProperty>
					<wireTap id="logTargetRequest6" uri="seda:loggerprocess" />

					<removeHeaders pattern="*" excludePattern="CurrentTimestamp|TransactionId|Sourcename|Conversationid|Content-type|CamelHttpMethod" />
					<log message="In ${routeId}, Calling target URL EmailValidationBEAdapterEndpoint with Request :: ${body}" />
					<to id="_CreditVidyaURL" uri="{{route.EmailValidationBEAdapterEndpoint}}?connectTimeout={{route.ConnectTimeout}}&amp;soTimeout={{route.SocketTimeout}}&amp;throwExceptionOnFailure=false&amp;bridgeEndpoint=true" />
					<log message="In ${routeId}, Response from EmailValidationBEAdapterEndpoint :: ${body}" />
					<convertBodyTo id="_convertBodyTo22" type="java.lang.String" />
					<choice id="_choice3">
						<when id="_when3">
							<simple>${body} == null || ${body} == ""</simple>
							<setBody id="_setBody9">
								<simple>{"retStatus":"ERROR","errorMessage":"Issue while connecting to Back End"}</simple>
							</setBody>
						</when>
					</choice>
					<setHeader name="messageType" id="_targetResponse3">
						<simple>BEResponse</simple>
					</setHeader>
					<setProperty id="_targetSystem24" name="targetSystem">
						<simple>CreditVidya_BE_ADAPTER</simple>
					</setProperty>
					<setProperty id="EmailValidation_operationNameSetTimestamp8004" name="CurrentTimestamp">
						<simple>${date-with-timezone:now:IST:dd-MMM-yyyy HH:mm:ss.SSS}</simple>
					</setProperty>
					<wireTap id="logTargetResponse4" uri="seda:loggerprocess" />
					<process id="_TACVEmailValidationResponseProcessor" ref="TACVEmailValidationResponseProcessor" />
					<setHeader name="messageType" id="_sourceResponse3">
						<simple>SourceResponse</simple>
					</setHeader>
					<setProperty id="_targetSystem25" name="targetSystem">
						<simple>${in.header.SourceName}</simple>
					</setProperty>
					<removeHeader name="org.restlet.http.headers" id="_removeRestletHttpHeaders5" />
					<removeHeaders pattern="*" excludePattern="CurrentTimestamp|TransactionId|Sourcename|Conversationid|Content-type|CamelHttpMethod" />
					<setProperty id="EmailValidation_operationNameSetTimestamp8005" name="CurrentTimestamp">
						<simple>${date-with-timezone:now:IST:dd-MMM-yyyy HH:mm:ss.SSS}</simple>
					</setProperty>
					<wireTap id="logSourceResponse6" uri="seda:loggerprocess" />
				</otherwise>
			</choice>
			<onException id="HandleEmailValidationException" useOriginalMessage="true">
				<exception>java.lang.Exception</exception>
				<exception>java.net.ConnectException</exception>
				<handled>
					<constant>true</constant>
				</handled>
				<log message="${exception.stacktrace}" />
				<log message="In ${routeId}, Exception Occurred :: ${exception.message} " />
				<setProperty id="setErrorBoolean" name="ErrorOccured">
					<constant>yes</constant>
				</setProperty>
				<setProperty id="setExpMsg" name="ExpMsg">
					<simple>${exception.message}</simple>
				</setProperty>
				<setProperty name="stacktrace">
					<simple>${exception.stacktrace}</simple>
				</setProperty>
				<process id="processErrorResp" ref="TACVEmailValidationResponseProcessor" />
				<convertBodyTo id="ErrorReponse" type="java.lang.String" />
				<setHeader name="transactionId" id="_transactionId1">
					<simple>${exchangeProperty.transactionId}</simple>
				</setHeader>
				<setHeader name="messageType" id="_messageType1">
					<simple>SourceResponse</simple>
				</setHeader>
				<setHeader name="responseStatus" id="faliure">
					<simple>Failure</simple>
				</setHeader>
				<setHeader name="Content-Type" id="_setHeader3">
					<simple>application/json</simple>
				</setHeader>
				<setProperty id="EmailValidation_operationNameSetTimestamp8006" name="CurrentTimestamp">
					<simple>${date-with-timezone:now:IST:dd-MMM-yyyy HH:mm:ss.SSS}</simple>
				</setProperty>
				<wireTap id="logSourceRespons3" uri="seda:loggerprocess" />
			</onException>
		</route>
		<!-- Header Validation -->
		<route id="HeaderValidationRoute">
			<from id="_processHeader" uri="direct:processHeader" />
			<choice id="headerProcessing">
				<when id="Missingheader">
					<simple id="_validateHeader">${in.header.SourceName} == null || ${in.header.SourceName} == "" || ${in.header.ConversationID} == null || ${in.header.ConversationID} == "" || ${in.header.Authorization} == null ||
						${in.header.Authorization} == ""</simple>

					<setHeader name="MissingHeader" id="_MissingHeader">
						<simple>MissingHeader</simple>
					</setHeader>
					<process id="ErrorAck" ref="ErrorAckProcessor" />
					<marshal id="MarshalErrorResponse">
						<json library="Jackson" prettyPrint="true" />
					</marshal>
					<convertBodyTo id="convertToString" type="java.lang.String" />
				</when>
			</choice>
		</route>
		<!-- Logger Route -->
		<route id="loggerRoute">
			<from id="GetLogRequest" uri="seda:loggerprocess1233" />
			<setBody id="setLogBody">
				<simple>
					{"timestamp":"${exchangeProperty.CurrentTimestamp}","processName":"${exchangeProperty.processName}","serviceName":"${exchangeProperty.serviceName}","targetSystem":"${exchangeProperty.targetSystem}","messageType":"${header.messageType}","username":"${exchangeProperty.sourceName}","conversationId":"${exchangeProperty.conversationId}","transactionId":"${exchangeProperty.transactionId}","headerDetails":{"authorization":"${exchangeProperty.authorization}","conversationId":"${exchangeProperty.conversationId}","sourceName":"${exchangeProperty.sourceName}"},"payload":${body},"status":"${header.responseStatus}"}
				</simple>
			</setBody>
			<log id="logBody" message="${body}" />
		</route>
		<!-- Logger Route for XML -->
		<route id="loggerRouteXML">
			<from id="GetLoggerRouteXML" uri="seda:loggerprocess7575" />
			<to id="_LinarizeXML" uri="xslt:./xslt/LinarizeXML.xslt" />
			<process id="_TransformXMLString" ref="TransformXMLString" />
			<convertBodyTo id="ConvertBodyToStringForXML" type="java.lang.String" />
			<setBody id="ReplaceAllNewlineTabswithSpaceForXML">
				<simple>${body.replaceAll("\\r\\n+|\u0009", "")}</simple>
			</setBody>
			<setBody id="setLogBodyXML">
				<simple>
					{"timestamp":"${exchangeProperty.CurrentTimestamp}","processName":"${exchangeProperty.processName}","serviceName":"${exchangeProperty.serviceName}","targetSystem":"${exchangeProperty.targetSystem}","messageType":"${header.messageType}","username":"${exchangeProperty.sourceName}","conversationId":"${exchangeProperty.conversationId}","transactionId":"${exchangeProperty.transactionId}","headerDetails":{"authorization":"${exchangeProperty.authorization}","conversationId":"${exchangeProperty.conversationId}","sourceName":"${exchangeProperty.sourceName}"},"payload":{"payloadBody":"${body}"},"status":"${header.responseStatus}"}
				</simple>
			</setBody>
			<log id="logBodyXML" message="${body}" />
		</route>
	</camelContext>
</beans>
